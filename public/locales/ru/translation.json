{
  "auth": {
    "sign-in": "Войти",
    "sign-up": "Зарегистрироваться",
    "logout": "Выйти",
    "email-pattern-error": "Пожалуйста, предоставьте корректный адрес почты",
    "email-label": "Адрес почты",
    "password-pattern-error": "Пароль должен содержать как минимум одну букву, одно число, один специальный символ",
    "password-min-length-error": "Пароль не может быть менее 8 символов",
    "password-label": "Пароль",
    "sign-in-link": "Есть аккаунт? Войдите",
    "sign-up-link": "Нет аккаунта? Зарегистрируйтесь",
    "success": "Успешный вход"
  },
  "layout": {
    "no-page-error": "Страницы, которую ты ищешь, не существует"
  },
  "main": {
    "title": "Это главная страница",
    "editorPlaceholder": "Добро пожаловать в GraphiQL\n\nGraphiQL это встроенный в браузер инструмент для написания, проверки и тестирование запросов GraphQL.\n\nПример запроса GraphQL может выглядеть так:\n  {\n      field arg: \"value\") {\n        subField\n      }\n  }\n\nВведите ваши запросы в эту часть экрана \n\nКонечная точка по умолчанию — https://graphql.anilist.co",
    "variables": "переменные",
    "headers": "заголовки",
    "networkError": "Ошибка сети"
  },
  "hello": {
    "get-started": "Начать",
    "learn-more": "Узнать больше",
    "heading": {
      "describe": "Опишите ваши данные",
      "ask": "Спросите, что вы хотите",
      "get": "Получите предсказуемые результаты"
    },
    "info": {
      "title": "Язык запросов для вашего API",
      "content": "GraphQL — это язык запросов для API и среда выполнения для выполнения этих запросов с вашими существующими данными. GraphQL предоставляет полное и понятное описание данных в вашем API, дает клиентам возможность запрашивать именно то, что им нужно, и ничего больше, упрощает развитие API с течением времени и предоставляет мощные инструменты разработчика."
    },
    "course": {
      "about": "RS School — это бесплатная образовательная программа, проводимая сообществом разработчиков The Rolling Scopes с 2013 года.",
      "info": "Учиться в RS School может каждый, независимо от возраста, профессиональной занятости и места жительства. Наставники и тренеры нашей школы — фронтенд- и javascript-разработчики из разных компаний и стран."
    },
    "members": {
      "title": "Кто использует GraphQL?"
    },
    "advantages": {
      "needed": {
        "title": "Просите то, что вам нужно, получите именно это",
        "description": "Отправьте запрос GraphQL в свой API и получите именно то, что вам нужно, не больше и не меньше. Запросы GraphQL всегда возвращают предсказуемые результаты. Приложения, использующие GraphQL, работают быстро и стабильно, потому что они контролируют получаемые данные, а не сервер."
      },
      "single": {
        "title": "Получите всё нужное в одном запросе",
        "description": "Запросы GraphQL обращаются не только к свойствам одного ресурса, но и плавно следуют ссылкам между ними. В то время как типичные API REST требуют загрузки с нескольких URL-адресов, API GraphQL получают все данные, необходимые вашему приложению, в одном запросе. Приложения, использующие GraphQL, могут работать быстро даже при медленном подключении к мобильной сети."
      },
      "types": {
        "title": "Опишите всё, что возможно с системой типов",
        "description": "API-интерфейсы GraphQL организованы по типам и полям, а не по конечным точкам. Получите доступ ко всем возможностям ваших данных из единой конечной точки. GraphQL использует типы, чтобы приложения запрашивали только то, что возможно, и предоставляли четкие и полезные ошибки. Приложения могут использовать типы, чтобы не писать код синтаксического анализа вручную."
      }
    }
  }
}
