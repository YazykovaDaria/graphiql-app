{
  "auth": {
    "sign-in": "Sign in",
    "sign-up": "Sign up",
    "logout": "Logout",
    "email-pattern-error": "Please provide a correct email address",
    "email-label": "Email Address",
    "password-pattern-error": "Password should contain at least one letter, one digit, one special character",
    "password-min-length-error": "Password cannot be under 8 symbols",
    "password-label": "Password",
    "sign-in-link": "Already have an account? Sign in",
    "sign-up-link": "Don't have an account? Sign Up",
    "success": "Successful login"
  },
  "layout": {
    "no-page-error": "The page you are looking for does not exist"
  },
  "main": {
    "editorPlaceholder": "Welcome to GraphiQL\n\nGraphiQL is an in-browser tool for writing, validating, and testing GraphQL queries.\n\nAn example GraphQL query might look like:\n  {\n      field arg: \"value\") {\n        subField\n      }\n  }\n\nType your queries into this side of the screen \n\nDefault endpoint is an instance of https://rickandmortyapi.com/graphql",
    "variables": "variables",
    "networkError": "Network error"
  },
  "hello": {
    "get-started": "Get started",
    "learn-more": "Learn more",
    "heading": {
      "describe": "Describe your data",
      "ask": "Ask for what you want",
      "get": "Get predictable results"
    },
    "info": {
      "title": "A query language for your API",
      "content": "GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools."
    },
    "course": {
      "about": "RS School is free-of-charge and community-based education program conducted by The Rolling Scopes developer community since 2013.",
      "info": "Everyone can study at RS School, regardless of age, professional employment, or place of residence. The mentors and trainers of our school are front-end and javascript developers from different companies and countries."
    },
    "members": {
      "title": "Who is using GraphQL?"
    },
    "advantages": {
      "needed": {
        "title": "Ask for what you need, get exactly that",
        "description": "Send a GraphQL query to your API and get exactly what you need, nothing more and nothing less. GraphQL queries always return predictable results. Apps using GraphQL are fast and stable because they control the data they get, not the server."
      },
      "single": {
        "title": "Get many resources in a single request",
        "description": "GraphQL queries access not just the properties of one resource but also smoothly follow references between them. While typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request. Apps using GraphQL can be quick even on slow mobile network connections."
      },
      "types": {
        "title": "Describe what is possible with a type system",
        "description": "GraphQL APIs are organized in terms of types and fields, not endpoints. Access the full capabilities of your data from a single endpoint. GraphQL uses types to ensure Apps only ask for whatâ€™s possible and provide clear and helpful errors. Apps can use types to avoid writing manual parsing code."
      }
    }
  }
}
